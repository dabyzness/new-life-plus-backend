// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  username   String   @unique
  profile    Profile?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Profile {
  id                   Int      @id @default(autoincrement())
  name                 String
  avatar               String?
  experience           Int      @default(0)
  health               Int      @default(10)
  health_experience    Int      @default(0)
  level                Int      @default(1)
  strength             Int      @default(10)
  strength_experience  Int      @default(0)
  intellect            Int      @default(10)
  intellect_experience Int      @default(0)
  charisma             Int      @default(10)
  charisma_experience  Int      @default(0)
  gold                 Int      @default(20)
  username_rel         User     @relation(fields: [username], references: [username])
  username             String   @unique
  created_at           DateTime @default(now())
  updated_at           DateTime @default(now())

  tasks    Task[]
  routines Routine[]
  quests   Quest[]
}

model Task {
  id                  Int           @id @default(autoincrement())
  name                String
  skill               SKILL         @default(HEALTH)
  frequnecy_type      FREQ          @default(DAILY)
  daily_freq          DAILLY_FREQ[] @default([])
  weekly_freq         Int           @default(1)
  streak              Int           @default(0)
  num_completed       Int           @default(0)
  order_of_completion Int?
  repeatable          Int?
  is_complete         Boolean       @default(false)
  last_completed      DateTime?
  created_at          DateTime      @default(now())
  updated_at          DateTime      @default(now())

  profile           Profile  @relation(fields: [profile_id], references: [id])
  profile_id        Int
  parent_routine    Routine? @relation(fields: [parent_routine_id], references: [id])
  parent_routine_id Int?
  parent_quest      Quest?   @relation(fields: [parent_quest_id], references: [id])
  parent_quest_id   Int?
}

model Routine {
  id               Int       @id @default(autoincrement())
  name             String
  time_to_complete Int
  frequency_type   FREQ?
  streak           Int       @default(0)
  num_completed    Int       @default(0)
  last_completed   DateTime?
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now())

  profile    Profile @relation(fields: [profile_id], references: [id])
  profile_id Int

  tasks Task[]
}

model Quest {
  id               Int       @id @default(autoincrement())
  name             String
  rank             RANK
  num_subquests    Int
  is_complete      Boolean   @default(false)
  complete_by_date DateTime
  date_completed   DateTime?
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now())

  profile    Profile @relation(fields: [profile_id], references: [id])
  profile_id Int

  tasks Task[]
}

enum SKILL {
  HEALTH
  STRENGTH
  INTELLECT
  CHARISMA
}

enum FREQ {
  DAILY
  WEEKLY
  MONTHLY
}

enum DAILLY_FREQ {
  MON
  TUE
  WED
  THU
  FRI
  SAT
  SUN
}

enum RANK {
  D
  C
  B
  A
  S
}
